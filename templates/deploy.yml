parameters:
  - name: appName
    type: string

  - name: environmentType
    type: string
    values:
      - Dev
      - QA
      - ProdStaging
      - Prod

  - name: regions
    type: object
    default:
      - East

  - name: slotName
    type: string
    default: production

  - name: requireManual
    type: boolean
    default: false

jobs:
  - deployment: jobDeploy
    displayName: Deploy
    environment: ${{ parameters.environmentType }}
    pool:
      vmImage: ubuntu-latest
    strategy:
      runOnce:
        deploy:
          steps:
            - ${{ each region in parameters.regions }}:
              - script: echo build-artifact
                displayName: Deploy ${{ region }}

  - job: jobDeploy
    strategy:
      matrix:
        ${{ each region in parameters.regions }}:
          ${{ region }}:
            azureAppName: ${{ parameters.appName }}-${{ region }}-${{ parameters.environmentType }}
    steps:
      - script: echo $(azureAppName)

      - deployment: jobDeploy
        displayName: Deploy
        environment: ${{ parameters.environmentType }}
        pool:
          vmImage: ubuntu-latest
        strategy:
          runOnce:
            deploy:
              steps:
                - script: echo build-artifact
                  displayName: Deploy

  - job: jobDeployValidation
    displayName: E2E Tests
    dependsOn: jobDeploy
    variables:
      deployedAppUrl: $[ dependencies.jobDeploy.outputs['jobDeploy.setDeployedAppUrl.deployedAppUrl'] ]
    steps:
      - script: env | sort
        displayName: Pipeline Environment

      - script: echo build-artifact
        displayName: Build

#  - ${{ if eq(parameters.requireManual, true) }}:
#      - job:
#        displayName: Manual Approval
#        dependsOn: jobDeployValidation
#        pool: server
#        steps:
#          - task: ManualValidation@0
#            timeoutInMinutes: 1
#            inputs:
#              instructions: |
#                ✅ Acceptance criteria is met
#                ✅ Regressions pass
#              onTimeout: 'reject'
