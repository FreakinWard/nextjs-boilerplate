# Node.js Express Web App to Linux on Azure
# Build a Node.js Express app and deploy it to Azure as a Linux web app.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
  - main

parameters:
  - name: forceDeploy
    type: boolean
    default: false

variables:
  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: '6001685e-2c0d-4d57-b07f-e198dfce3799'

  # Web app name
  webAppName: 'App-nextjs-boilerplate'

  # Environment name
  environmentName: 'App-nextjs-boilerplate'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

  # Is running on main branch
  isMain: $[eq(variables['Build.SourceBranch'], 'refs/heads/main')]

  sourceSlot: 'staging'
  resourceGroup: 'nextjs-boilerplate'

stages:
  - stage: Build
    displayName: Build stage
    jobs:
      - job: Build
        displayName: Build
        pool:
          vmImage: $(vmImageName)

        steps:
          - script: 'env | sort'
            displayName: Pipeline Environment

          - script: |
              echo $(Build.SourceBranch)
              echo isMain $(isMain)
              echo forceDeploy ${{ parameters.forceDeploy }}

          - task: NodeTool@0
            inputs:
              versionSpec: '16.x'
            displayName: 'Install Node.js'

          - script: npm ci
            displayName: 'Install & Build'

          - script: npm run test:cover
            displayName: 'Tests'

          - task: PublishTestResults@2
            displayName: 'Publish Unit Test'
            condition: succeededOrFailed()
            inputs:
              testResultsFiles: 'coverage/jest-junit/junit.xml'

          - task: PublishCodeCoverageResults@1
            displayName: 'Publish Code Coverage'
            condition: succeededOrFailed()
            inputs:
              failIfCoverageEmpty: true
              codeCoverageTool: Cobertura
              summaryFileLocation: $(System.DefaultWorkingDirectory)/coverage/cobertura-coverage.xml

          - task: PublishHtmlReport@1
            displayName: 'Publish Unit Test Report'
            condition: succeededOrFailed()
            inputs:
              reportDir: 'coverage/html-report.html'
              tabName: 'Unit Tests'

          - task: CopyFiles@2
            displayName: Prepare Artifact
            inputs:
              contents: |
                **/**

                !node_modules/**
                !.git/**
                !.husky/**
                !.idea/**
                !.storybook/**
                !jest.config.js
                !jest.setup.js
                !lint-staged.config.js
                !prettier.config.js
              targetFolder: $(Build.ArtifactStagingDirectory)

          - task: PublishPipelineArtifact@1
            displayName: Publish Artifact
            inputs:
              targetPath: $(Build.ArtifactStagingDirectory)
              artifactType: 'pipeline'
              artifactName: $(System.DefinitionName)

  - ${{ if xor( eq(variables.isMain, true), eq(parameters.forceDeploy, true) ) }}:
      #  - ${{ if eq(variables.isMain, 'true') }}:
      - stage: Deploy
        displayName: Deploy stage
        dependsOn: Build
        jobs:
          - deployment: deployProduction
            displayName: Deploy Dev
            environment: Dev
            pool:
              vmImage: $(vmImageName)
            strategy:
              runOnce:
                deploy:
                  steps:
                    - task: AzureWebApp@1
                      displayName: 'Azure Web App Deploy'
                      inputs:
                        azureSubscription: $(azureSubscription)
                        appType: webAppLinux
                        appName: $(webAppName)
                        runtimeStack: 'NODE|14-lts'
                        package: $(Pipeline.Workspace)/$(System.DefinitionName)
                        startUpCommand: 'npm run start'
                        appSettings: -PORT 8080
