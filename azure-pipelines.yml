# Node.js Express Web App to Linux on Azure
# Build a Node.js Express app and deploy it to Azure as a Linux web app.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

parameters:
  - name: deployToDev
    type: boolean
    default: false

variables:
  appName: aw-aux-checkout-microsite

  azureSubscription: '6001685e-2c0d-4d57-b07f-e198dfce3799'
  buildPackageName: $(System.DefinitionName)-$(Build.BuildNumber)

  npm_config_cache: $(Pipeline.Workspace)/.npm
  cyCacheDir: /home/vsts/.cache/Cypress
  nextCacheDir: $(System.DefaultWorkingDirectory)/.next/cache
  cacheVersion: v1

  CI_BUILD_NUMBER: mySuperValue-$(Build.BuildNumber)

stages:
- stage: stageBuild
  displayName: Build
  jobs:
  - template: templates/build.yml

- stage: stageDeployDev
  displayName: Dev
  dependsOn: stageBuild
  #  condition: and(succeeded(), or(eq(variables.isCI, 'true'), eq(${{ parameters.deployToDev }}, 'true')))
  condition: and(succeeded(), eq(${{ parameters.deployToDev }}, 'true'))
  jobs:
  - template: templates/deploy.yml
    parameters:
      environmentType: Dev
      slotName: service-staging
      serviceConnection: $(azureSubscription)
      regions:
        - East

  - template: templates/swapSlot.yml
    parameters:
      environmentType: Dev
      slotName: service-staging
      dependsOnDeployJob: true
      serviceConnection: $(azureSubscription)
      regions:
        - East


#- stage: stageDeployQA
#  displayName: QA
#  dependsOn: stageBuild
#  condition: and(succeeded(), eq(${{ parameters.pullRequest }}, false))
#  jobs:
#  - template: templates/deploy.yml
#    parameters:
#      environmentType: QA
#      appName: App-nextjs-boilerplate-qa
#
#- stage: stageDeployStaging
#  displayName: Staging Prod
#  dependsOn: stageDeployQA
#  jobs:
#    - job: jobDeploy
#      displayName: Deploy Staging
#
#      steps:
#        - script: 'echo deploy Staging'
#          displayName: Deploy
#
#    - job: jobDeployValidation
#      displayName: E2E Tests Staging
#      dependsOn: jobDeploy
#      steps:
#        - script: 'echo e2e test'
#          displayName: Cypress
#
#    - job: jobApproval
#      displayName: Manual Approval
#      dependsOn: jobDeployValidation
#      pool: server
#      steps:
#        - task: ManualValidation@0
#          timeoutInMinutes: 1
#          inputs:
#            instructions: |
#              ✅ Acceptance criteria is met
#              ✅ Regressions pass
#            onTimeout: 'reject'
#
#- stage: stageDeployProd
#  displayName: Prod
#  dependsOn: stageDeployStaging
#  jobs:
#    - job: jobDeploy
#      displayName: Deploy Prod
#      steps:
#        - script: 'echo deploy Prod'
#          displayName: Deploy
#
#    - job: jobDeployValidation
#      displayName: E2E Tests Prod
#      dependsOn: jobDeploy
#      steps:
#        - script: 'echo e2e test'
#          displayName: Cypress
#
#    - job: jobApproval
#      displayName: Manual Approval
#      dependsOn: jobDeployValidation
#      pool: server
#      steps:
#        - task: ManualValidation@0
#          timeoutInMinutes: 1
#          inputs:
#            instructions: |
#              ✅ Acceptance criteria is met
#              ✅ Regressions pass
#            onTimeout: 'reject'
