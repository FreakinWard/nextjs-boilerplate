# Node.js Express Web App to Linux on Azure
# Build a Node.js Express app and deploy it to Azure as a Linux web app.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
  - main

parameters:
  - name: deployToDev
    type: boolean
    default: false

variables:
  isCI: $[in(variables['Build.Reason'], 'IndividualCI', 'BatchedCI')]

  azureSubscription: '6001685e-2c0d-4d57-b07f-e198dfce3799'
  npm_config_cache: $(Pipeline.Workspace)/.npm
  CYPRESS_CACHE_FOLDER: $(Pipeline.Workspace)/.cache/Cypress

stages:
  - stage: stageGithubPreRelease
    displayName: Github Pre - Release
    jobs:
      - job: jobGithubPreRelease
        displayName: Github Pre-Release
        steps:
          - script: env | sort
            displayName: Pipeline Environment

          - task: GithubRelease@1
            displayName: GitHub Create
            inputs:
              gitHubConnection: FreakinWard-github-connection
              repositoryName: $(Build.Repository.Name)
              title: $(Build.DefinitionName) -v$(Build.BuildNumber)
              action: create
              target: $(Build.SourceVersion)
              tagSource: userSpecifiedTag
              changeLogCompareToRelease: lastFullRelease
              changeLogType: commitBased
              tag: $(Build.BuildNumber)
              isPreRelease: true

  - stage: stageGithubRelease
    displayName: Github Release
    dependsOn: stageGithubPreRelease
    jobs:
      - job: manualApproval
        displayName: Manual Approval
        pool: server
        steps:
          - task: ManualValidation@0
            timeoutInMinutes: 1
            inputs:
              instructions: Release is ready to promote
              onTimeout: 'reject'

      - job: jobGithubPromote
        displayName: Github Promote
        dependsOn: manualApproval
        steps:
          - script: env | sort
            displayName: Pipeline Environment

          - task: GithubRelease@1
            displayName: github request
            inputs:
              gitHubConnection: FreakinWard-github-connection
              repositoryName: $(Build.Repository.Name)
              action: edit
              tag: $(Build.BuildNumber)


  - stage: stageBuild
    dependsOn: stageGithubRelease
    displayName: Build
    condition: false
    jobs:
      - template: templates/build.yml


  - stage: stageDeployDev
    displayName: Dev
    dependsOn: stageBuild
    condition: and(succeeded(), or(eq(variables.isCI, true), eq(${{ parameters.deployToDev }}, true)))
    jobs:
      - template: templates/deploy.yml
        parameters:
          appName: app-nextjs-boilerplate
          environmentType: Dev
          regions:
            - East
            - West

#
#  - stage: stageDeployIntegration
#    displayName: Integration
#    dependsOn: stageBuild
#    condition: and(succeeded(), eq(${{ parameters.pullRequest }}, false))
#    jobs:
#      - template: templates/deploy.yml
#        parameters:
#          environmentType: QA
#          appName: app-nextjs-boilerplate-qa


  - stage: stageDeployQA
    displayName: QA
    dependsOn: stageDeployDev
#    condition: variables.isCI
    condition: false
    jobs:
      - template: templates/swapSlot.yml
        parameters:
          environmentType: QA
          appName: app-nextjs-boilerplate-qa
          resourceGroupName: nextjs-boilerplate
          requireManual: true


  - stage: stageDeployStaging
    displayName: Staging Prod
    dependsOn: stageDeployQA
#    condition: eq(true, false) # TODO: disabled until production environment is created
    jobs:
      - template: templates/deploy.yml
        parameters:
          environmentType: ProdStaging
          appName: app-nextjs-boilerplate-prod
          slotName: staging
          requireManual: true


  - stage: stageDeployProd
    displayName: Prod
    dependsOn: stageDeployStaging
    jobs:
      - template: templates/swapSlot.yml
        parameters:
          environmentType: Prod
          appName: app-nextjs-boilerplate-prod
          resourceGroupName: nextjs-boilerplate
          requireManual: true
